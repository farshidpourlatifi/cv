---
/**
 * BaseLayout Component
 *
 * Base layout with SEO, meta tags, and common HTML structure
 */

import { getConfig, getPersonalInfo } from '../utils/data-loader';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonicalURL?: string;
  noIndex?: boolean;
}

const config = getConfig();
const personal = getPersonalInfo();

const {
  title = config.site.title,
  description = config.site.description,
  image = '/og-image.png',
  canonicalURL = new URL(Astro.url.pathname, Astro.site).href,
  noIndex = false,
} = Astro.props;

const fullTitle = title === config.site.title ? title : `${title} | ${config.site.author}`;
---

<!doctype html>
<html lang={config.site.lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />

    <!-- SEO Meta Tags -->
    <title>{fullTitle}</title>
    <meta name="description" content={description} />
    <meta name="author" content={config.site.author} />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Robots -->
    {noIndex && <meta name="robots" content="noindex, nofollow" />}

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={fullTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.site).href} />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={canonicalURL} />
    <meta name="twitter:title" content={fullTitle} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(image, Astro.site).href} />

    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

    <!-- Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap"
      rel="stylesheet"
    />

    <!-- Structured Data (JSON-LD) -->
    <script type="application/ld+json" set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "Person",
      "name": personal.name,
      "jobTitle": personal.title,
      "email": personal.email,
      "telephone": personal.phone,
      "address": {
        "@type": "PostalAddress",
        "addressLocality": personal.location
      },
      "sameAs": [
        `https://${personal.linkedin}`
      ],
      "url": config.site.url
    })} />
  </head>
  <body>
    <!-- Skip to main content for accessibility -->
    <a href="#main-content" class="skip-to-main">
      Skip to main content
    </a>

    <slot />
  </body>
</html>

<style is:global>
  /* CSS Custom Properties */
  :root {
    /* Figma Design System Colors */

    /* Primary Blues (Dark Background) */
    --color-primary: #0A3A52;          /* Darkest Blue - Primary BG */
    --color-primary-light: #004B72;     /* Dark Blue */
    --color-secondary: #006BA5;         /* Medium Blue - Interactive */
    --color-secondary-light: #3E9FD4;   /* Cyan - Highlights & Titles */

    /* Accent Colors */
    --color-accent: #F0000F;            /* Primary Red - CTA */
    --color-accent-dark: #BF0B16;       /* Dark Red */
    --color-accent-light: #FF1322;      /* Light Red */
    --color-accent-pink: #F3555F;       /* Pink Red */

    /* Blues & Cyans (Extended Palette) */
    --color-blue-dark: #1C7DB3;         /* Blue */
    --color-cyan-light: #6ACBFF;        /* Light Cyan */
    --color-cyan-lighter: #A4E0FF;      /* Very Light Cyan */
    --color-blue-light: #B2D8EC;        /* Light Blue */

    /* Decorative Line Accent */
    --color-line-accent: #E00514;       /* Line accents in design */

    /* Neutral Colors */
    --color-white: #FFFFFF;
    --color-black: #000000;
    --color-gray-dark: #474747;         /* Dark Gray */
    --color-gray: #71717B;              /* Medium Gray */
    --color-gray-light: #7A7A82;        /* Light Gray */
    --color-gray-lighter: #D4D3D8;      /* Very Light Gray */

    /* Background Gradient */
    --color-bg-from: #0A3A52;
    --color-bg-to: #004B72;

    /* Legacy gray scale (for compatibility) */
    --color-gray-50: #F9FAFB;
    --color-gray-100: #F3F4F6;
    --color-gray-200: #E5E7EB;
    --color-gray-300: #D1D5DB;
    --color-gray-400: #9CA3AF;
    --color-gray-500: #6B7280;
    --color-gray-600: #4B5563;
    --color-gray-700: #374151;
    --color-gray-800: #1F2937;
    --color-gray-900: #111827;

    /* Typography - Figma Design System */
    --font-sans: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
    --font-display: 'Inter', var(--font-sans);

    /* Font Weights */
    --font-normal: 400;
    --font-semibold: 600;
    --font-bold: 700;

    /* Font sizes from Figma - EXACT values */
    --text-xs: 0.5rem;       /* 8px - Present label */
    --text-xxs: 0.625rem;    /* 10px - Date labels */
    --text-sm: 0.875rem;     /* 14px - Skills, descriptions */
    --text-base: 1rem;       /* 16px - Body text */
    --text-lg: 1.125rem;     /* 18px - Pagination */
    --text-xl: 1.25rem;      /* 20px - Navigation */
    --text-2xl: 1.5rem;      /* 24px - Section subheadings */
    --text-3xl: 1.563rem;    /* 25px - Subtitle */
    --text-4xl: 3.75rem;     /* 60px - Last name */
    --text-5xl: 4.375rem;    /* 70px - First name & Section titles */
    --text-hero-first: 70px; /* Exact 70px for first name */
    --text-hero-last: 60px;  /* Exact 60px for last name */
    --text-hero-title: 25px; /* Exact 25px for title */

    /* Spacing */
    --space-1: 0.25rem;      /* 4px */
    --space-2: 0.5rem;       /* 8px */
    --space-3: 0.75rem;      /* 12px */
    --space-4: 1rem;         /* 16px */
    --space-5: 1.25rem;      /* 20px */
    --space-6: 1.5rem;       /* 24px */
    --space-8: 2rem;         /* 32px */
    --space-10: 2.5rem;      /* 40px */
    --space-12: 3rem;        /* 48px */
    --space-16: 4rem;        /* 64px */
    --space-20: 5rem;        /* 80px */

    /* Breakpoints (for reference) */
    --screen-sm: 640px;
    --screen-md: 768px;
    --screen-lg: 1024px;
    --screen-xl: 1280px;
    --screen-2xl: 1536px;

    /* Shadows */
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);

    /* Border radius */
    --radius-sm: 0.25rem;
    --radius: 0.5rem;
    --radius-md: 0.75rem;
    --radius-lg: 1rem;
    --radius-full: 9999px;

    /* Transitions */
    --transition-fast: 150ms ease-in-out;
    --transition-base: 300ms ease-in-out;
    --transition-slow: 500ms ease-in-out;
  }

  /* CSS Reset */
  *, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    scroll-behavior: smooth;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  body {
    font-family: var(--font-sans);
    font-size: var(--text-base);
    line-height: 1.5;
    color: var(--color-white);
    background: var(--color-primary);
    min-height: 100vh;
    overflow-x: hidden;
  }

  /* Skip to main content link */
  .skip-to-main {
    position: absolute;
    top: -100px;
    left: 0;
    background: var(--color-accent);
    color: var(--color-white);
    padding: var(--space-3) var(--space-6);
    text-decoration: none;
    font-weight: 600;
    z-index: 1000;
    border-radius: 0 0 var(--radius) 0;
  }

  .skip-to-main:focus {
    top: 0;
    outline: 2px solid var(--color-white);
    outline-offset: 2px;
  }

  /* Typography */
  h1, h2, h3, h4, h5, h6 {
    font-family: var(--font-display);
    font-weight: var(--font-semibold);
    line-height: 1.2;
    color: var(--color-white);
  }

  h1 {
    font-size: var(--text-5xl);
    line-height: 1.21; /* 85px/70px from Figma */
  }
  h2 {
    font-size: var(--text-4xl);
    line-height: 1.22; /* 73px/60px from Figma */
  }
  h3 { font-size: var(--text-2xl); }
  h4 { font-size: var(--text-xl); }
  h5 { font-size: var(--text-lg); }
  h6 { font-size: var(--text-base); }

  p {
    margin-bottom: var(--space-4);
  }

  a {
    color: var(--color-secondary);
    text-decoration: none;
    transition: color var(--transition-fast);
  }

  a:hover {
    color: var(--color-primary);
  }

  a:focus-visible {
    outline: 2px solid var(--color-accent);
    outline-offset: 2px;
    border-radius: var(--radius-sm);
  }

  /* Lists */
  ul, ol {
    list-style: none;
  }

  /* Images */
  img {
    max-width: 100%;
    height: auto;
    display: block;
  }

  /* Buttons */
  button {
    font-family: inherit;
    cursor: pointer;
  }

  /* Responsive text scaling for mobile */
  @media (max-width: 767px) {
    :root {
      --text-5xl: 2.5rem;   /* 40px - Smaller on mobile */
      --text-4xl: 2rem;     /* 32px - Smaller on mobile */
      --text-3xl: 1.25rem;  /* 20px */
      --text-2xl: 1.125rem; /* 18px */
    }
  }

  /* Utility classes */
  .container {
    width: 100%;
    max-width: 1280px;
    margin-left: auto;
    margin-right: auto;
    padding-left: var(--space-4);
    padding-right: var(--space-4);
  }

  @media (min-width: 768px) {
    .container {
      padding-left: var(--space-8);
      padding-right: var(--space-8);
    }
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
</style>
